name: Test Every Chapter

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  chap1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install essential lib
      run: |
        wget -q https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip
        unzip -q libtorch-shared-with-deps-latest.zip
        sudo mv libtorch /
        export Torch_ROOT=/libtorch
        python3 -m pip -q install torch torchvision

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/chap1/build -S ${{github.workspace}}/chap1 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=/libtorch

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/chap1/build --config ${{env.BUILD_TYPE}}

    - name: Run python
      run: |
        python3 ${{github.workspace}}/chap1/python/HelloWorld.py

    - name: Run cpp
      run: |
        ${{github.workspace}}/chap1/build/HelloWorld


  chap2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install essential lib
      run: |
        wget -q https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip
        unzip -q libtorch-shared-with-deps-latest.zip
        sudo mv libtorch /
        export Torch_ROOT=/libtorch
        python3 -m pip -q install torch torchvision

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/chap2/build -S ${{github.workspace}}/chap2 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=/libtorch
        
    - name: Build
      run: |
        cmake --build ${{github.workspace}}/chap2/build --config ${{env.BUILD_TYPE}}
        
    - name: Run python
      run: |
        python3 ${{github.workspace}}/chap2/python/TensorBasics.py
        
    - name: Run cpp
      run: |
        ${{github.workspace}}/chap2/build/TensorBasics


  chap3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install essential lib
      run: |
        wget -q https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip
        unzip -q libtorch-shared-with-deps-latest.zip
        sudo mv libtorch /
        export Torch_ROOT=/libtorch
        python3 -m pip -q install torch torchvision

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/chap3/build -S ${{github.workspace}}/chap3 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=/libtorch
        
    - name: Build
      run: |
        cmake --build ${{github.workspace}}/chap3/build --config ${{env.BUILD_TYPE}}
        
    - name: Run python
      run: |
        python3 ${{github.workspace}}/chap3/python/AutoGrad.py
        
    - name: Run cpp
      run: |
        ${{github.workspace}}/chap3/build/AutoGrad


  chap4:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install essential lib
      run: |
        wget -q https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip
        unzip -q libtorch-shared-with-deps-latest.zip
        sudo mv libtorch /
        export Torch_ROOT=/libtorch
        python3 -m pip -q install torch torchvision

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/chap4/build -S ${{github.workspace}}/chap4 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=/libtorch
        
    - name: Build
      run: |
        cmake --build ${{github.workspace}}/chap4/build --config ${{env.BUILD_TYPE}}
        
    - name: Run python
      run: |
        python3 ${{github.workspace}}/chap4/python/BasicModels.py
        
    - name: Run cpp
      run: |
        ${{github.workspace}}/chap4/build/BasicModels


  chap5:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install essential lib
      run: |
        sudo apt update
        sudo apt install gzip
        wget -q https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip
        unzip -q libtorch-shared-with-deps-latest.zip
        sudo mv libtorch /
        export Torch_ROOT=/libtorch
        python3 -m pip -q install torch torchvision
        cd ${{github.workspace}}/chap5/data
        bash prepare_cora.sh
        cd ${{github.workspace}}

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/chap5/build -S ${{github.workspace}}/chap5 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=/libtorch
        
    - name: Build
      run: |
        cmake --build ${{github.workspace}}/chap5/build --config ${{env.BUILD_TYPE}}
        
    - name: Run python
      run: |
        python3 ${{github.workspace}}/chap5/python/PracticeModels.py
        
    - name: Run cpp
      run: |
        cd ${{github.workspace}}/chap5/build/
        ./PracticeModels
        cd ${{github.workspace}}


  chap6:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install essential lib
      run: |
        wget -q https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip
        unzip -q libtorch-shared-with-deps-latest.zip
        sudo mv libtorch /
        export Torch_ROOT=/libtorch
        python3 -m pip -q install torch torchvision

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/chap6/build -S ${{github.workspace}}/chap6 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=/libtorch
        
    - name: Build
      run: |
        cmake --build ${{github.workspace}}/chap6/build --config ${{env.BUILD_TYPE}}
        
    - name: Run python
      run: |
        python3 ${{github.workspace}}/chap6/python/export_model.py
        
    - name: Run cpp
      run: |
        cd ${{github.workspace}}/chap6/build/
        ./TorchScript
        cd ${{github.workspace}}
